version: '3.7'
services:
<<<<<<< HEAD
=======

>>>>>>> 4e06ed6a65b7ad4cbc646b979764a9e328c5ee08
  api:
    build: .
    image: tarpaulin-api
    restart: always
    ports:
      - 8000:8000
    environment:
      MONGO_DATABASE: ${MONGO_DATABASE}
      MONGO_USER: ${MONGO_USER}
      MONGO_PASSWORD: ${MONGO_PASSWORD}
      MONGO_HOST: mongodb
      MONGO_PORT: 27017
      REDIS_HOST: redis
      REDIS_PORT: 6379
      RABBIT_MQ_HOST: rabbitmq-server
    networks:
      - primary
<<<<<<< HEAD
      - redis-net
=======
      - redis-net      
>>>>>>> 4e06ed6a65b7ad4cbc646b979764a9e328c5ee08

  rabbitmq-server:
    image: rabbitmq:3-management
    ports:
      - 5672:5672
      - 15672:15672

  mongodb:
    image: mongo:latest
    restart: always
    volumes:
      - mongo-data:/data/db
      - ./db-init/:/docker-entrypoint-initdb.d
    ports:
      - 27017:27017
    networks:
      - primary
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
<<<<<<< HEAD
      MONGO_INITDB_DATABASE: ${MONGO_ROOT_PASSWORD}
      MONGO_USER: ${MONGO_USER}
      MONGO_PASSWORD: ${MONGO_PASSWORD}

=======
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
      MONGO_USER: ${MONGO_USER}
      MONGO_PASSWORD: ${MONGO_PASSWORD}
    networks:
      - primary      
      
>>>>>>> 4e06ed6a65b7ad4cbc646b979764a9e328c5ee08
  redis:
    image: redis:latest
    restart: always
    networks:
<<<<<<< HEAD
      - redis-net
=======
      - redis-net      
>>>>>>> 4e06ed6a65b7ad4cbc646b979764a9e328c5ee08

volumes:
  mongo-data:

networks:
  redis-net:
<<<<<<< HEAD
  primary:
=======
  primary:
>>>>>>> 4e06ed6a65b7ad4cbc646b979764a9e328c5ee08
